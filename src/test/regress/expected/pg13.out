create schema test_pg13;
set search_path to test_pg13;
SET citus.shard_replication_factor to 1;
SET citus.shard_count to 2;
SET citus.next_shard_id TO 65000;
CREATE TABLE dist_table (name char, age int);
CREATE INDEX name_index on dist_table(name);
SELECT create_distributed_table('dist_table', 'name');
 create_distributed_table
---------------------------------------------------------------------

(1 row)

SET client_min_messages to DEBUG1;
SET citus.log_remote_commands to ON;
-- make sure vacuum parallel doesn't error out
VACUUM (PARALLEL 2) dist_table;
NOTICE:  issuing VACUUM (PARALLEL 2) test_pg13.dist_table_65000
DETAIL:  on server postgres@localhost:xxxxx connectionId: xxxxxxx
NOTICE:  issuing VACUUM (PARALLEL 2) test_pg13.dist_table_65001
DETAIL:  on server postgres@localhost:xxxxx connectionId: xxxxxxx
VACUUM (PARALLEL 0) dist_table;
NOTICE:  issuing VACUUM (PARALLEL 0) test_pg13.dist_table_65000
DETAIL:  on server postgres@localhost:xxxxx connectionId: xxxxxxx
NOTICE:  issuing VACUUM (PARALLEL 0) test_pg13.dist_table_65001
DETAIL:  on server postgres@localhost:xxxxx connectionId: xxxxxxx
-- This should error out since -5 is not valid.
VACUUM (PARALLEL -5) dist_table;
ERROR:  parallel vacuum degree must be between 0 and 1024
-- This should error out since no number is given
VACUUM (PARALLEL) dist_table;
ERROR:  parallel option requires a value between 0 and 1024
RESET client_min_messages;
RESET citus.log_remote_commands;
-- test alter table alter column drop expression
CREATE TABLE generated_col_table(a int, b int GENERATED ALWAYS AS (a * 10) STORED);
SELECT create_distributed_table('generated_col_table', 'a');
 create_distributed_table
---------------------------------------------------------------------

(1 row)

INSERT INTO generated_col_table VALUES (1);
-- Make sure that we currently error out
ALTER TABLE generated_col_table ALTER COLUMN b DROP EXPRESSION;
ERROR:  alter table command is currently unsupported
DETAIL:  Only ADD|DROP COLUMN, SET|DROP NOT NULL, SET|DROP DEFAULT, ADD|DROP|VALIDATE CONSTRAINT, SET (), RESET (), ATTACH|DETACH PARTITION and TYPE subcommands are supported.
-- alter view rename column works fine
CREATE VIEW v AS SELECT * FROM dist_table;
ALTER VIEW v RENAME age to new_age;
SELECT * FROM v;
 name | new_age
---------------------------------------------------------------------
(0 rows)

-- row suffix notation works fine
CREATE TABLE ab (a int, b int);
SELECT create_distributed_table('ab','a');
 create_distributed_table
---------------------------------------------------------------------

(1 row)

INSERT INTO ab SELECT i, 2 * i FROM generate_series(1,20)i;
SELECT * FROM ab WHERE (ROW(a,b)).f1 > (ROW(10,30)).f1 ORDER BY 1,2;
 a  | b
---------------------------------------------------------------------
 11 | 22
 12 | 24
 13 | 26
 14 | 28
 15 | 30
 16 | 32
 17 | 34
 18 | 36
 19 | 38
 20 | 40
(10 rows)

SELECT * FROM ab WHERE (ROW(a,b)).f2 > (ROW(0,38)).f2 ORDER BY 1,2;
 a  | b
---------------------------------------------------------------------
 20 | 40
(1 row)

drop schema test_pg13 cascade;
NOTICE:  drop cascades to 4 other objects
DETAIL:  drop cascades to table dist_table
drop cascades to table generated_col_table
drop cascades to view v
drop cascades to table ab
